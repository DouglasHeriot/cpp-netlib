sudo: false

language: cpp

compiler:
- g++
- clang

env:
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="ON" CMAKE_BUILD_TYPE="Release" ENABLE_HTTPS="ON"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="ON" CMAKE_BUILD_TYPE="Release" ENABLE_HTTPS="OFF"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="ON" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="ON" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="OFF"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Release" ENABLE_HTTPS="ON"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Release" ENABLE_HTTPS="OFF"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="OFF"
# Support the sanitizers in clang only
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON" CMAKE_CXX_FLAGS="-fsanitize=thread"
- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON" CMAKE_CXX_FLAGS="-fsanitize=address"
# TODO(deanberris): It seems Boost is not msan-clean yet; report bugs and maybe fix?
#- BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON" CMAKE_CXX_FLAGS="-fsanitize=memory -fsanitize-memory-track-origins=2"

matrix:
  exclude:
    - compiler: g++
      env: BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON" CMAKE_CXX_FLAGS="-fsanitize=thread"
    - compiler: g++
      env: BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON" CMAKE_CXX_FLAGS="-fsanitize=address"
# TODO(deanberris): It seems Boost is not msan-clean yet; report bugs and maybe fix?
#    - compiler: g++
#      env: BOOST_VER=1.59.0 BUILD_SHARED_LIBS="OFF" CMAKE_BUILD_TYPE="Debug" ENABLE_HTTPS="ON" CMAKE_CXX_FLAGS="-fsanitize=memory -fsanitize-memory-track-origins=2"

install:
- mkdir -p ${HOME}/bin
- if [ "${CC}" = "gcc" ]; then export TOOLSET="gcc"; ln -s `which g++-4.8` ${HOME}/bin/g++;
  ln -s `which gcc-4.8` ${HOME}/bin/gcc; fi
- if [ "${CC}" = "clang" ]; then export TOOLSET="clang"; ln -s `which clang-3.6` ${HOME}/bin/clang;
  ln -s `which clang++-3.6` ${HOME}/bin/clang++; fi
- export BOOST_VERSION=${BOOST_VER//./_}
- export PATH=${HOME}/bin:${PATH}
- travis_wait ./install-boost.sh
- export BOOST_ROOT=${HOME}/${CC}-boost_${BOOST_VER//./_}
- "${CXX} --version"

cache:
  directories:
  - "${HOME}/${CC}-boost_${BOOST_VER//./_}"

script:
- pwd
- sh -x build.sh

after_failure:
- cat build/Testing/Temporary/LastTest.log

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.6
    - kalakris-cmake
    packages:
    - gcc-4.8
    - g++-4.8
    - clang-3.6
    - cmake

  coverity_scan:
    project:
      name: "cpp-netlib/cpp-netlib"
      description: "C++ Network Library"
    notification_email: glyn.matthews@gmail.com
    build_command_prepend: "cd _build; cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DCPP-NETLIB_DISABLE_LIBCXX=YES -DCPP-NETLIB_DISABLE_FEATURE_TESTS=YES .."
    build_command:   "make"
    branch_pattern: coverity_scan

notifications:
  slack:
    secure: Y7lLjqZ83+b/jaJ5+EKwvgCDeERi4bVbDn9tLp8sieTdu+ENsPI+JmLYSXZXPpe7JrItrXW6uJJXN2wG1h7au4mpVVTghd31HBzuzrqVxDphWPhp16NYzvbAgQQRBXvFVvfSdW/Kb/n2fX6xDApY0t6vNREb/GKg0GyzESb4ZjU=

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "s7+KDpzPjp0gBrlVfRXdXDNqOsjHVIkB2vyFd5JG8X0e+L2gaAJqH4dm4JaVNWOgo+s7DTIgj8n3r9WL7IQtaGmajQCZj6J6qTRQV3V87iH/wKihCNr5eJEGr1OSa5v01VLWDB5mp4pQsEqyeDfTv+McPL0eofO1K2LMZIweFQk="
